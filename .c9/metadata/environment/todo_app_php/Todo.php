{"filter":false,"title":"Todo.php","tooltip":"/todo_app_php/Todo.php","undoManager":{"mark":42,"position":42,"stack":[[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":["<"],"id":1}],[{"start":{"row":0,"column":1},"end":{"row":0,"column":2},"action":"insert","lines":["?"],"id":2}],[{"start":{"row":0,"column":2},"end":{"row":0,"column":3},"action":"insert","lines":["p"],"id":3},{"start":{"row":0,"column":3},"end":{"row":0,"column":4},"action":"insert","lines":["h"]},{"start":{"row":0,"column":4},"end":{"row":0,"column":5},"action":"insert","lines":["p"]}],[{"start":{"row":0,"column":5},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""]},{"start":{"row":2,"column":0},"end":{"row":2,"column":1},"action":"insert","lines":["n"]},{"start":{"row":2,"column":1},"end":{"row":2,"column":2},"action":"insert","lines":["a"]},{"start":{"row":2,"column":2},"end":{"row":2,"column":3},"action":"insert","lines":["m"]},{"start":{"row":2,"column":3},"end":{"row":2,"column":4},"action":"insert","lines":["e"]}],[{"start":{"row":2,"column":4},"end":{"row":2,"column":5},"action":"insert","lines":["s"],"id":5},{"start":{"row":2,"column":5},"end":{"row":2,"column":6},"action":"insert","lines":["p"]},{"start":{"row":2,"column":6},"end":{"row":2,"column":7},"action":"insert","lines":["a"]},{"start":{"row":2,"column":7},"end":{"row":2,"column":8},"action":"insert","lines":["c"]},{"start":{"row":2,"column":8},"end":{"row":2,"column":9},"action":"insert","lines":["e"]}],[{"start":{"row":2,"column":9},"end":{"row":2,"column":10},"action":"insert","lines":[" "],"id":6},{"start":{"row":2,"column":10},"end":{"row":2,"column":11},"action":"insert","lines":["M"]},{"start":{"row":2,"column":11},"end":{"row":2,"column":12},"action":"insert","lines":["y"]},{"start":{"row":2,"column":12},"end":{"row":2,"column":13},"action":"insert","lines":["A"]}],[{"start":{"row":2,"column":13},"end":{"row":2,"column":14},"action":"insert","lines":["p"],"id":7},{"start":{"row":2,"column":14},"end":{"row":2,"column":15},"action":"insert","lines":["p"]},{"start":{"row":2,"column":15},"end":{"row":2,"column":16},"action":"insert","lines":[";"]}],[{"start":{"row":2,"column":16},"end":{"row":3,"column":0},"action":"insert","lines":["",""],"id":8},{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":4,"column":0},"end":{"row":4,"column":1},"action":"insert","lines":["c"],"id":9},{"start":{"row":4,"column":1},"end":{"row":4,"column":2},"action":"insert","lines":["l"]},{"start":{"row":4,"column":2},"end":{"row":4,"column":3},"action":"insert","lines":["a"]},{"start":{"row":4,"column":3},"end":{"row":4,"column":4},"action":"insert","lines":["s"]},{"start":{"row":4,"column":4},"end":{"row":4,"column":5},"action":"insert","lines":["s"]}],[{"start":{"row":4,"column":5},"end":{"row":4,"column":6},"action":"insert","lines":[" "],"id":10},{"start":{"row":4,"column":6},"end":{"row":4,"column":7},"action":"insert","lines":["T"]},{"start":{"row":4,"column":7},"end":{"row":4,"column":8},"action":"insert","lines":["o"]},{"start":{"row":4,"column":8},"end":{"row":4,"column":9},"action":"insert","lines":["d"]}],[{"start":{"row":4,"column":9},"end":{"row":4,"column":10},"action":"insert","lines":["o"],"id":11}],[{"start":{"row":4,"column":10},"end":{"row":4,"column":11},"action":"insert","lines":[" "],"id":12},{"start":{"row":4,"column":11},"end":{"row":4,"column":12},"action":"insert","lines":["{"]}],[{"start":{"row":4,"column":12},"end":{"row":6,"column":1},"action":"insert","lines":["","    ","}"],"id":13}],[{"start":{"row":5,"column":4},"end":{"row":5,"column":5},"action":"insert","lines":["p"],"id":14},{"start":{"row":5,"column":5},"end":{"row":5,"column":6},"action":"insert","lines":["r"]},{"start":{"row":5,"column":6},"end":{"row":5,"column":7},"action":"insert","lines":["i"]}],[{"start":{"row":5,"column":7},"end":{"row":5,"column":8},"action":"insert","lines":["v"],"id":15},{"start":{"row":5,"column":8},"end":{"row":5,"column":9},"action":"insert","lines":["a"]},{"start":{"row":5,"column":9},"end":{"row":5,"column":10},"action":"insert","lines":["t"]},{"start":{"row":5,"column":10},"end":{"row":5,"column":11},"action":"insert","lines":["e"]}],[{"start":{"row":5,"column":11},"end":{"row":5,"column":12},"action":"insert","lines":[" "],"id":16},{"start":{"row":5,"column":12},"end":{"row":5,"column":13},"action":"insert","lines":["$"]}],[{"start":{"row":5,"column":13},"end":{"row":5,"column":14},"action":"insert","lines":["_"],"id":17},{"start":{"row":5,"column":14},"end":{"row":5,"column":15},"action":"insert","lines":["d"]},{"start":{"row":5,"column":15},"end":{"row":5,"column":16},"action":"insert","lines":["b"]}],[{"start":{"row":5,"column":16},"end":{"row":5,"column":17},"action":"insert","lines":[";"],"id":18}],[{"start":{"row":5,"column":17},"end":{"row":6,"column":0},"action":"insert","lines":["",""],"id":19},{"start":{"row":6,"column":0},"end":{"row":6,"column":4},"action":"insert","lines":["    "]},{"start":{"row":6,"column":4},"end":{"row":7,"column":0},"action":"insert","lines":["",""]},{"start":{"row":7,"column":0},"end":{"row":7,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":7,"column":4},"end":{"row":7,"column":5},"action":"insert","lines":["p"],"id":20},{"start":{"row":7,"column":5},"end":{"row":7,"column":6},"action":"insert","lines":["u"]},{"start":{"row":7,"column":6},"end":{"row":7,"column":7},"action":"insert","lines":["b"]},{"start":{"row":7,"column":7},"end":{"row":7,"column":8},"action":"insert","lines":["l"]},{"start":{"row":7,"column":8},"end":{"row":7,"column":9},"action":"insert","lines":["i"]},{"start":{"row":7,"column":9},"end":{"row":7,"column":10},"action":"insert","lines":["c"]},{"start":{"row":7,"column":10},"end":{"row":7,"column":11},"action":"insert","lines":["k"]}],[{"start":{"row":7,"column":10},"end":{"row":7,"column":11},"action":"remove","lines":["k"],"id":21}],[{"start":{"row":7,"column":10},"end":{"row":7,"column":11},"action":"insert","lines":[" "],"id":22},{"start":{"row":7,"column":11},"end":{"row":7,"column":12},"action":"insert","lines":["f"]},{"start":{"row":7,"column":12},"end":{"row":7,"column":13},"action":"insert","lines":["u"]},{"start":{"row":7,"column":13},"end":{"row":7,"column":14},"action":"insert","lines":["n"]},{"start":{"row":7,"column":14},"end":{"row":7,"column":15},"action":"insert","lines":["c"]}],[{"start":{"row":7,"column":15},"end":{"row":7,"column":16},"action":"insert","lines":["t"],"id":23},{"start":{"row":7,"column":16},"end":{"row":7,"column":17},"action":"insert","lines":["i"]},{"start":{"row":7,"column":17},"end":{"row":7,"column":18},"action":"insert","lines":["o"]},{"start":{"row":7,"column":18},"end":{"row":7,"column":19},"action":"insert","lines":["n"]}],[{"start":{"row":7,"column":19},"end":{"row":7,"column":20},"action":"insert","lines":[" "],"id":24},{"start":{"row":7,"column":20},"end":{"row":7,"column":21},"action":"insert","lines":["_"]},{"start":{"row":7,"column":21},"end":{"row":7,"column":22},"action":"insert","lines":["_"]}],[{"start":{"row":7,"column":22},"end":{"row":7,"column":23},"action":"insert","lines":["c"],"id":25},{"start":{"row":7,"column":23},"end":{"row":7,"column":24},"action":"insert","lines":["o"]},{"start":{"row":7,"column":24},"end":{"row":7,"column":25},"action":"insert","lines":["n"]}],[{"start":{"row":7,"column":25},"end":{"row":7,"column":26},"action":"insert","lines":["s"],"id":26},{"start":{"row":7,"column":26},"end":{"row":7,"column":27},"action":"insert","lines":["t"]},{"start":{"row":7,"column":27},"end":{"row":7,"column":28},"action":"insert","lines":["r"]},{"start":{"row":7,"column":28},"end":{"row":7,"column":29},"action":"insert","lines":["u"]}],[{"start":{"row":7,"column":29},"end":{"row":7,"column":30},"action":"insert","lines":["c"],"id":27},{"start":{"row":7,"column":30},"end":{"row":7,"column":31},"action":"insert","lines":["t"]}],[{"start":{"row":7,"column":31},"end":{"row":7,"column":33},"action":"insert","lines":["()"],"id":28}],[{"start":{"row":7,"column":33},"end":{"row":7,"column":34},"action":"insert","lines":[" "],"id":29},{"start":{"row":7,"column":34},"end":{"row":7,"column":35},"action":"insert","lines":["{"]}],[{"start":{"row":7,"column":35},"end":{"row":9,"column":5},"action":"insert","lines":["","        ","    }"],"id":30}],[{"start":{"row":0,"column":0},"end":{"row":10,"column":1},"action":"remove","lines":["<?php","","namespace MyApp;","","class Todo {","    private $_db;","    ","    public function __construct() {","        ","    }","}"],"id":37},{"start":{"row":0,"column":0},"end":{"row":21,"column":1},"action":"insert","lines":["<?php","","namespace MyApp;","","class Todo {","  private $_db;","","  public function __construct() {","    try {","      $this->_db = new \\PDO(DSN, DB_USERNAME, DB_PASSWORD);","      $this->_db->setAttribute(\\PDO::ATTR_ERRMODE, \\PDO::ERRMODE_EXCEPTION);","    } catch (\\PDOException $e) {","      echo $e->getMessage();","      exit;","    }","  }","","  public function getAll() {","","  }","","}"]}],[{"start":{"row":0,"column":0},"end":{"row":21,"column":1},"action":"remove","lines":["<?php","","namespace MyApp;","","class Todo {","  private $_db;","","  public function __construct() {","    try {","      $this->_db = new \\PDO(DSN, DB_USERNAME, DB_PASSWORD);","      $this->_db->setAttribute(\\PDO::ATTR_ERRMODE, \\PDO::ERRMODE_EXCEPTION);","    } catch (\\PDOException $e) {","      echo $e->getMessage();","      exit;","    }","  }","","  public function getAll() {","","  }","","}"],"id":38},{"start":{"row":0,"column":0},"end":{"row":22,"column":1},"action":"insert","lines":["<?php","","namespace MyApp;","","class Todo {","  private $_db;","","  public function __construct() {","    try {","      $this->_db = new \\PDO(DSN, DB_USERNAME, DB_PASSWORD);","      $this->_db->setAttribute(\\PDO::ATTR_ERRMODE, \\PDO::ERRMODE_EXCEPTION);","    } catch (\\PDOException $e) {","      echo $e->getMessage();","      exit;","    }","  }","","  public function getAll() {","    $stmt = $this->_db->query(\"select * from todos order by id desc\");","    return $stmt->fetchAll(\\PDO::FETCH_OBJ);","  }","","}"]}],[{"start":{"row":0,"column":0},"end":{"row":22,"column":1},"action":"remove","lines":["<?php","","namespace MyApp;","","class Todo {","  private $_db;","","  public function __construct() {","    try {","      $this->_db = new \\PDO(DSN, DB_USERNAME, DB_PASSWORD);","      $this->_db->setAttribute(\\PDO::ATTR_ERRMODE, \\PDO::ERRMODE_EXCEPTION);","    } catch (\\PDOException $e) {","      echo $e->getMessage();","      exit;","    }","  }","","  public function getAll() {","    $stmt = $this->_db->query(\"select * from todos order by id desc\");","    return $stmt->fetchAll(\\PDO::FETCH_OBJ);","  }","","}"],"id":39},{"start":{"row":0,"column":0},"end":{"row":48,"column":1},"action":"insert","lines":["<?php","","namespace MyApp;","","class Todo {","  private $_db;","","  public function __construct() {","    try {","      $this->_db = new \\PDO(DSN, DB_USERNAME, DB_PASSWORD);","      $this->_db->setAttribute(\\PDO::ATTR_ERRMODE, \\PDO::ERRMODE_EXCEPTION);","    } catch (\\PDOException $e) {","      echo $e->getMessage();","      exit;","    }","  }","","  public function getAll() {","    $stmt = $this->_db->query(\"select * from todos order by id desc\");","    return $stmt->fetchAll(\\PDO::FETCH_OBJ);","  }","","  public function post() {","    if (!isset($_POST['mode'])) {","      throw new \\Exception('mode not set!');","    }","","    switch ($_POST['mode']) {","      case 'update':","        return $this->_update();","      case 'create':","        return $this->_create();","      case 'delete':","        return $this->_delete();","    }","  }","","  private function _update() {","    ","  }","","  private function _create() {","","  }","","  private function _delete() {","","  }","}"]}],[{"start":{"row":0,"column":0},"end":{"row":48,"column":1},"action":"remove","lines":["<?php","","namespace MyApp;","","class Todo {","  private $_db;","","  public function __construct() {","    try {","      $this->_db = new \\PDO(DSN, DB_USERNAME, DB_PASSWORD);","      $this->_db->setAttribute(\\PDO::ATTR_ERRMODE, \\PDO::ERRMODE_EXCEPTION);","    } catch (\\PDOException $e) {","      echo $e->getMessage();","      exit;","    }","  }","","  public function getAll() {","    $stmt = $this->_db->query(\"select * from todos order by id desc\");","    return $stmt->fetchAll(\\PDO::FETCH_OBJ);","  }","","  public function post() {","    if (!isset($_POST['mode'])) {","      throw new \\Exception('mode not set!');","    }","","    switch ($_POST['mode']) {","      case 'update':","        return $this->_update();","      case 'create':","        return $this->_create();","      case 'delete':","        return $this->_delete();","    }","  }","","  private function _update() {","    ","  }","","  private function _create() {","","  }","","  private function _delete() {","","  }","}"],"id":40},{"start":{"row":0,"column":0},"end":{"row":67,"column":1},"action":"insert","lines":["<?php","","namespace MyApp;","","class Todo {","  private $_db;","","  public function __construct() {","    try {","      $this->_db = new \\PDO(DSN, DB_USERNAME, DB_PASSWORD);","      $this->_db->setAttribute(\\PDO::ATTR_ERRMODE, \\PDO::ERRMODE_EXCEPTION);","    } catch (\\PDOException $e) {","      echo $e->getMessage();","      exit;","    }","  }","","  public function getAll() {","    $stmt = $this->_db->query(\"select * from todos order by id desc\");","    return $stmt->fetchAll(\\PDO::FETCH_OBJ);","  }","","  public function post() {","    if (!isset($_POST['mode'])) {","      throw new \\Exception('mode not set!');","    }","","    switch ($_POST['mode']) {","      case 'update':","        return $this->_update();","      case 'create':","        return $this->_create();","      case 'delete':","        return $this->_delete();","    }","  }","","  private function _update() {","    if (!isset($_POST['id'])) {","      throw new \\Exception('[update] id not set!');","    }","","    $this->_db->beginTransaction();","","    $sql = sprintf(\"update todos set state = (state + 1) % 2 where id = %d\", $_POST['id']);","    $stmt = $this->_db->prepare($sql);","    $stmt->excute();","","    $sql = sprintf(\"select state from todos where id = %d\", $_POST['id']);","    $stmt = $this->_db->query($sql);","    $state = $stmt->fetchColumn();","","    $this->_db->commit();","","    return [","      'state' => $state","    ];","","  }","","  private function _create() {","","  }","","  private function _delete() {","","  }","}"]}],[{"start":{"row":44,"column":58},"end":{"row":44,"column":59},"action":"insert","lines":["%"],"id":41}],[{"start":{"row":46,"column":13},"end":{"row":46,"column":14},"action":"insert","lines":["e"],"id":42}],[{"start":{"row":0,"column":0},"end":{"row":67,"column":1},"action":"remove","lines":["<?php","","namespace MyApp;","","class Todo {","  private $_db;","","  public function __construct() {","    try {","      $this->_db = new \\PDO(DSN, DB_USERNAME, DB_PASSWORD);","      $this->_db->setAttribute(\\PDO::ATTR_ERRMODE, \\PDO::ERRMODE_EXCEPTION);","    } catch (\\PDOException $e) {","      echo $e->getMessage();","      exit;","    }","  }","","  public function getAll() {","    $stmt = $this->_db->query(\"select * from todos order by id desc\");","    return $stmt->fetchAll(\\PDO::FETCH_OBJ);","  }","","  public function post() {","    if (!isset($_POST['mode'])) {","      throw new \\Exception('mode not set!');","    }","","    switch ($_POST['mode']) {","      case 'update':","        return $this->_update();","      case 'create':","        return $this->_create();","      case 'delete':","        return $this->_delete();","    }","  }","","  private function _update() {","    if (!isset($_POST['id'])) {","      throw new \\Exception('[update] id not set!');","    }","","    $this->_db->beginTransaction();","","    $sql = sprintf(\"update todos set state = (state + 1) %% 2 where id = %d\", $_POST['id']);","    $stmt = $this->_db->prepare($sql);","    $stmt->execute();","","    $sql = sprintf(\"select state from todos where id = %d\", $_POST['id']);","    $stmt = $this->_db->query($sql);","    $state = $stmt->fetchColumn();","","    $this->_db->commit();","","    return [","      'state' => $state","    ];","","  }","","  private function _create() {","","  }","","  private function _delete() {","","  }","}"],"id":43},{"start":{"row":0,"column":0},"end":{"row":80,"column":1},"action":"insert","lines":["<?php","","// CSRF対策","// Token発行してSessionに格納","// フォームからもTokenを発行、送信","// Check","","namespace MyApp;","","class Todo {","  private $_db;","","  public function __construct() {","    $this->_createToken();","","    try {","      $this->_db = new \\PDO(DSN, DB_USERNAME, DB_PASSWORD);","      $this->_db->setAttribute(\\PDO::ATTR_ERRMODE, \\PDO::ERRMODE_EXCEPTION);","    } catch (\\PDOException $e) {","      echo $e->getMessage();","      exit;","    }","  }","","  private function _createToken() {","    if (!isset($_SESSION['token'])) {","      $_SESSION['token'] = bin2hex(openssl_random_pseudo_bytes(16));","    }","  }","","  public function getAll() {","    $stmt = $this->_db->query(\"select * from todos order by id desc\");","    return $stmt->fetchAll(\\PDO::FETCH_OBJ);","  }","","  public function post() {","    if (!isset($_POST['mode'])) {","      throw new \\Exception('mode not set!');","    }","","    switch ($_POST['mode']) {","      case 'update':","        return $this->_update();","      case 'create':","        return $this->_create();","      case 'delete':","        return $this->_delete();","    }","  }","","  private function _update() {","    if (!isset($_POST['id'])) {","      throw new \\Exception('[update] id not set!');","    }","","    $this->_db->beginTransaction();","","    $sql = sprintf(\"update todos set state = (state + 1) %% 2 where id = %d\", $_POST['id']);","    $stmt = $this->_db->prepare($sql);","    $stmt->execute();","","    $sql = sprintf(\"select state from todos where id = %d\", $_POST['id']);","    $stmt = $this->_db->query($sql);","    $state = $stmt->fetchColumn();","","    $this->_db->commit();","","    return [","      'state' => $state","    ];","","  }","","  private function _create() {","","  }","","  private function _delete() {","","  }","}"]}],[{"start":{"row":2,"column":0},"end":{"row":5,"column":8},"action":"remove","lines":["// CSRF対策","// Token発行してSessionに格納","// フォームからもTokenを発行、送信","// Check"],"id":44},{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":0,"column":5},"end":{"row":1,"column":0},"action":"remove","lines":["",""],"id":45}],[{"start":{"row":0,"column":0},"end":{"row":75,"column":1},"action":"remove","lines":["<?php","","namespace MyApp;","","class Todo {","  private $_db;","","  public function __construct() {","    $this->_createToken();","","    try {","      $this->_db = new \\PDO(DSN, DB_USERNAME, DB_PASSWORD);","      $this->_db->setAttribute(\\PDO::ATTR_ERRMODE, \\PDO::ERRMODE_EXCEPTION);","    } catch (\\PDOException $e) {","      echo $e->getMessage();","      exit;","    }","  }","","  private function _createToken() {","    if (!isset($_SESSION['token'])) {","      $_SESSION['token'] = bin2hex(openssl_random_pseudo_bytes(16));","    }","  }","","  public function getAll() {","    $stmt = $this->_db->query(\"select * from todos order by id desc\");","    return $stmt->fetchAll(\\PDO::FETCH_OBJ);","  }","","  public function post() {","    if (!isset($_POST['mode'])) {","      throw new \\Exception('mode not set!');","    }","","    switch ($_POST['mode']) {","      case 'update':","        return $this->_update();","      case 'create':","        return $this->_create();","      case 'delete':","        return $this->_delete();","    }","  }","","  private function _update() {","    if (!isset($_POST['id'])) {","      throw new \\Exception('[update] id not set!');","    }","","    $this->_db->beginTransaction();","","    $sql = sprintf(\"update todos set state = (state + 1) %% 2 where id = %d\", $_POST['id']);","    $stmt = $this->_db->prepare($sql);","    $stmt->execute();","","    $sql = sprintf(\"select state from todos where id = %d\", $_POST['id']);","    $stmt = $this->_db->query($sql);","    $state = $stmt->fetchColumn();","","    $this->_db->commit();","","    return [","      'state' => $state","    ];","","  }","","  private function _create() {","","  }","","  private function _delete() {","","  }","}"],"id":46},{"start":{"row":0,"column":0},"end":{"row":92,"column":1},"action":"insert","lines":["<?php","","// CSRF対策","// Token発行してSessionに格納","// フォームからもTokenを発行、送信","// Check","","namespace MyApp;","","class Todo {","  private $_db;","","  public function __construct() {","    $this->_createToken();","","    try {","      $this->_db = new \\PDO(DSN, DB_USERNAME, DB_PASSWORD);","      $this->_db->setAttribute(\\PDO::ATTR_ERRMODE, \\PDO::ERRMODE_EXCEPTION);","    } catch (\\PDOException $e) {","      echo $e->getMessage();","      exit;","    }","  }","","  private function _createToken() {","    if (!isset($_SESSION['token'])) {","      $_SESSION['token'] = bin2hex(openssl_random_pseudo_bytes(16));","    }","  }","","  public function getAll() {","    $stmt = $this->_db->query(\"select * from todos order by id desc\");","    return $stmt->fetchAll(\\PDO::FETCH_OBJ);","  }","","  public function post() {","    $this->_validateToken();","","    if (!isset($_POST['mode'])) {","      throw new \\Exception('mode not set!');","    }","","    switch ($_POST['mode']) {","      case 'update':","        return $this->_update();","      case 'create':","        return $this->_create();","      case 'delete':","        return $this->_delete();","    }","  }","","  private function _validateToken() {","    if (","      !isset($_SESSION['token']) ||","      !isset($_POST['token']) ||","      $_SESSION['token'] !== $_POST['token']","    ) {","      throw new \\Exception('invalid token!');","    }","  }","","  private function _update() {","    if (!isset($_POST['id'])) {","      throw new \\Exception('[update] id not set!');","    }","","    $this->_db->beginTransaction();","","    $sql = sprintf(\"update todos set state = (state + 1) %% 2 where id = %d\", $_POST['id']);","    $stmt = $this->_db->prepare($sql);","    $stmt->execute();","","    $sql = sprintf(\"select state from todos where id = %d\", $_POST['id']);","    $stmt = $this->_db->query($sql);","    $state = $stmt->fetchColumn();","","    $this->_db->commit();","","    return [","      'state' => $state","    ];","","  }","","  private function _create() {","","  }","","  private function _delete() {","","  }","}"]}],[{"start":{"row":0,"column":5},"end":{"row":5,"column":8},"action":"remove","lines":["","","// CSRF対策","// Token発行してSessionに格納","// フォームからもTokenを発行、送信","// Check"],"id":47}],[{"start":{"row":0,"column":0},"end":{"row":87,"column":1},"action":"remove","lines":["<?php","","namespace MyApp;","","class Todo {","  private $_db;","","  public function __construct() {","    $this->_createToken();","","    try {","      $this->_db = new \\PDO(DSN, DB_USERNAME, DB_PASSWORD);","      $this->_db->setAttribute(\\PDO::ATTR_ERRMODE, \\PDO::ERRMODE_EXCEPTION);","    } catch (\\PDOException $e) {","      echo $e->getMessage();","      exit;","    }","  }","","  private function _createToken() {","    if (!isset($_SESSION['token'])) {","      $_SESSION['token'] = bin2hex(openssl_random_pseudo_bytes(16));","    }","  }","","  public function getAll() {","    $stmt = $this->_db->query(\"select * from todos order by id desc\");","    return $stmt->fetchAll(\\PDO::FETCH_OBJ);","  }","","  public function post() {","    $this->_validateToken();","","    if (!isset($_POST['mode'])) {","      throw new \\Exception('mode not set!');","    }","","    switch ($_POST['mode']) {","      case 'update':","        return $this->_update();","      case 'create':","        return $this->_create();","      case 'delete':","        return $this->_delete();","    }","  }","","  private function _validateToken() {","    if (","      !isset($_SESSION['token']) ||","      !isset($_POST['token']) ||","      $_SESSION['token'] !== $_POST['token']","    ) {","      throw new \\Exception('invalid token!');","    }","  }","","  private function _update() {","    if (!isset($_POST['id'])) {","      throw new \\Exception('[update] id not set!');","    }","","    $this->_db->beginTransaction();","","    $sql = sprintf(\"update todos set state = (state + 1) %% 2 where id = %d\", $_POST['id']);","    $stmt = $this->_db->prepare($sql);","    $stmt->execute();","","    $sql = sprintf(\"select state from todos where id = %d\", $_POST['id']);","    $stmt = $this->_db->query($sql);","    $state = $stmt->fetchColumn();","","    $this->_db->commit();","","    return [","      'state' => $state","    ];","","  }","","  private function _create() {","","  }","","  private function _delete() {","","  }","}"],"id":48},{"start":{"row":0,"column":0},"end":{"row":100,"column":1},"action":"insert","lines":["<?php","","// CSRF対策","// Token発行してSessionに格納","// フォームからもTokenを発行、送信","// Check","","namespace MyApp;","","class Todo {","  private $_db;","","  public function __construct() {","    $this->_createToken();","","    try {","      $this->_db = new \\PDO(DSN, DB_USERNAME, DB_PASSWORD);","      $this->_db->setAttribute(\\PDO::ATTR_ERRMODE, \\PDO::ERRMODE_EXCEPTION);","    } catch (\\PDOException $e) {","      echo $e->getMessage();","      exit;","    }","  }","","  private function _createToken() {","    if (!isset($_SESSION['token'])) {","      $_SESSION['token'] = bin2hex(openssl_random_pseudo_bytes(16));","    }","  }","","  public function getAll() {","    $stmt = $this->_db->query(\"select * from todos order by id desc\");","    return $stmt->fetchAll(\\PDO::FETCH_OBJ);","  }","","  public function post() {","    $this->_validateToken();","","    if (!isset($_POST['mode'])) {","      throw new \\Exception('mode not set!');","    }","","    switch ($_POST['mode']) {","      case 'update':","        return $this->_update();","      case 'create':","        return $this->_create();","      case 'delete':","        return $this->_delete();","    }","  }","","  private function _validateToken() {","    if (","      !isset($_SESSION['token']) ||","      !isset($_POST['token']) ||","      $_SESSION['token'] !== $_POST['token']","    ) {","      throw new \\Exception('invalid token!');","    }","  }","","  private function _update() {","    if (!isset($_POST['id'])) {","      throw new \\Exception('[update] id not set!');","    }","","    $this->_db->beginTransaction();","","    $sql = sprintf(\"update todos set state = (state + 1) %% 2 where id = %d\", $_POST['id']);","    $stmt = $this->_db->prepare($sql);","    $stmt->execute();","","    $sql = sprintf(\"select state from todos where id = %d\", $_POST['id']);","    $stmt = $this->_db->query($sql);","    $state = $stmt->fetchColumn();","","    $this->_db->commit();","","    return [","      'state' => $state","    ];","  }","","  private function _create() {","","  }","","  private function _delete() {","    if (!isset($_POST['id'])) {","      throw new \\Exception('[delete] id not set!');","    }","","    $sql = sprintf(\"delete from todos where id = %d\", $_POST['id']);","    $stmt = $this->_db->prepare($sql);","    $stmt->execute();","","    return [];","","  }","}"]}],[{"start":{"row":0,"column":5},"end":{"row":5,"column":8},"action":"remove","lines":["","","// CSRF対策","// Token発行してSessionに格納","// フォームからもTokenを発行、送信","// Check"],"id":49}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":5},"end":{"row":0,"column":5},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1589275200829,"hash":"a8096c2f8d3d45a1ea5786fec93921f20c0aa6b3"}